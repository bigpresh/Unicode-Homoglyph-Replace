NAME

    Unicode::Homoglyph::Replace - replace homoglyphs with their ASCII
    lookalike equivalents

SYNOPSIS

        use Unicode::Homoglyph::Replace qw(replace_homoglyphs);
    
        my $replaced = replace_homoglyphs("...");
        ...

DESCRIPTION

    Unicode has various homoglyphs - characters which look the same or
    mostly the the same, but are different characters.

    If you're trying to filter input in some way, but support Unicode text,
    then such homoglyphs can be used to get past your filters. For
    instance, there are eleven other characters that look like a colon.

    So, if someone wants to be a ⅾⅰⅽk to bypass your filters, they can
    replace some characters with look-alike (or at least look-similar)
    characters which your profanity / spam filters won't recognise. (That
    example there was \x{217E}\x{2170}\x{217D}k - i.e. the characters SMALL
    ROMAN NUMERAL FIVE HUNDRED, SMALL ROMAN NUMERAL ONE, SMALL ROMAN
    NUMERAL ONE HUNDRED, and a "k".)

AUTHOR

    David Precious, <davidp at preshweb.co.uk>

BUGS

    Please report any bugs or feature requests to
    bug-unicode-homoglyph-replace at rt.cpan.org, or through the web
    interface at
    http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Unicode-Homoglyph-Replac
    e. I will be notified, and then you'll automatically be notified of
    progress on your bug as I make changes.

SUPPORT

    You can find documentation for this module with the perldoc command.

        perldoc Unicode::Homoglyph::Replace

    You can also look for information at:

      * RT: CPAN's request tracker (report bugs here)

      http://rt.cpan.org/NoAuth/Bugs.html?Dist=Unicode-Homoglyph-Replace

      * AnnoCPAN: Annotated CPAN documentation

      http://annocpan.org/dist/Unicode-Homoglyph-Replace

      * CPAN Ratings

      http://cpanratings.perl.org/d/Unicode-Homoglyph-Replace

      * Search CPAN

      http://search.cpan.org/dist/Unicode-Homoglyph-Replace/

SEE ALSO

    Unicode::Homoglyph, where the list of homoglyphs came from.

ACKNOWLEDGEMENTS

LICENSE AND COPYRIGHT

    Copyright 2018 David Precious.

    This program is free software; you can redistribute it and/or modify it
    under the terms of the the Artistic License (2.0). You may obtain a
    copy of the full license at:

    http://www.perlfoundation.org/artistic_license_2_0

    Any use, modification, and distribution of the Standard or Modified
    Versions is governed by this Artistic License. By using, modifying or
    distributing the Package, you accept this license. Do not use, modify,
    or distribute the Package, if you do not accept this license.

    If your Modified Version has been derived from a Modified Version made
    by someone other than you, you are nevertheless required to ensure that
    your Modified Version complies with the requirements of this license.

    This license does not grant you the right to use any trademark, service
    mark, tradename, or logo of the Copyright Holder.

    This license includes the non-exclusive, worldwide, free-of-charge
    patent license to make, have made, use, offer to sell, sell, import and
    otherwise transfer the Package with respect to any patent claims
    licensable by the Copyright Holder that are necessarily infringed by
    the Package. If you institute patent litigation (including a
    cross-claim or counterclaim) against any party alleging that the
    Package constitutes direct or contributory patent infringement, then
    this Artistic License to you shall terminate on the date that such
    litigation is filed.

    Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
    AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
    THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
    YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
    CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

POD ERRORS

    Hey! The above document had some coding errors, which are explained
    below:

    Around line 23:

      Non-ASCII character seen before =encoding in 'ⅾⅰⅽk'. Assuming UTF-8

